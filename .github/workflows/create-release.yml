name: "Create Release"

on:
  pull_request:
    types: [closed]
    branches:
      - main

jobs:
  create-release:
    # Only run when merge commit is from a release candidate branch
    if: github.event.pull_request.merged == true && startsWith(github.head_ref, 'release-candidates/')
    runs-on: ubuntu-latest
    permissions:
      contents: write
      id-token: write  # IMPORTANT: mandatory for trusted publishing

    environment:
      name: pypi
      url: https://pypi.org/p/PyProBE-Data
    
    steps:
      - uses: actions/checkout@v5
        with:
          fetch-depth: 0  # Fetch all history
          ref: main  # Correct branch reference

      - name: Extract version
        id: extract-version
        run: |
          # Extract version from pyproject file
          VERSION=$(python -c "import tomllib; print(tomllib.load(open('pyproject.toml', 'rb'))['project']['version'])")
          echo "version=$VERSION" >> $GITHUB_OUTPUT

      - name: Install uv
        uses: astral-sh/setup-uv@v6
        with:
            # Install a specific version of uv.
            version: "0.8.4"
  
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
            python-version-file: "pyproject.toml"

      - name: Build and test distribution installation
        run: |
          uv sync --all-extras --frozen
          uv build
          uv venv
          WHEEL_FILE=$(ls dist/*.whl | head -n 1)
          uv pip install ${WHEEL_FILE}[hvplot,seaborn,dev,docs,pybamm]
          uv run --no-sync pytest -n auto
          
      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
            name: dist
            path: dist/
            retention-days: 5  # Keep artifacts for 5 days
          
      - name: Create Release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: v${{ steps.extract-version.outputs.version }}
          generate_release_notes: true
          draft: false
          prerelease: false
          make_latest: true
          files: |
            dist/*.tar.gz
            dist/*.whl
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Publish
        run: uv publish --trusted-publishing always