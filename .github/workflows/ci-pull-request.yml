name: "CI for Pull Requests"
on:
  pull_request:
    branches:
      - main
    paths:
      - pyprobe/**
      - tests/**
      - docs/source/examples/*ipynb
      - pyproject.toml
      - .github/workflows/ci-pull-request.yml
      - uv.lock
  workflow_dispatch:
permissions:
  contents: read
  checks: write
jobs:
  # Matrix job for pull requests
  test-matrix:
    if: github.event_name == 'pull_request' || github.event_name == 'workflow_dispatch'
    strategy:
      matrix:
        python-version: ["3.11", "3.12"]
        os: [ubuntu-latest, windows-latest, macos-latest]
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v4
      
      - name: Install uv and set the python version
        uses: astral-sh/setup-uv@v6
        with:
          version: "0.6.16"
          enable-cache: true
          python-version: ${{ matrix.python-version }}
          
      - name: Run tests with frozen dependencies
        run: uv run --all-extras --frozen --isolated pytest --cov --cov-report=xml -n auto
      
      - name: Upload coverage reports to Codecov
        if: matrix.python-version == '3.12' && matrix.os == 'ubuntu-latest'
        uses: codecov/codecov-action@v5
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          
      - name: Test notebooks
        shell: bash
        run: |
          shopt -s extglob
          uv run --all-extras --frozen --isolated pytest --nbmake docs/source/examples/!(comparing-pyprobe-performance).ipynb
      
      - name: Test upgraded dependencies
        run: uv run --extra dev --upgrade --isolated pytest -n auto

      - name: Build and create clean virtual environment
        run: |
          uv sync --all-extras --frozen
          uv build
          uv venv
          echo "WHEEL_FILE=$(ls dist/*.whl | head -n 1)" >> $GITHUB_ENV

      - name: Install wheel with all optional dependencies
        if: runner.os == 'Linux' || runner.os == 'macOS'
        run: uv pip install "${WHEEL_FILE}[hvplot,seaborn,dev,docs,pybamm]"

      - name: Install wheel with all optional dependencies (Windows)
        if: runner.os == 'Windows'
        shell: pwsh
        run: |
          $wheel = $env:WHEEL_FILE + "[hvplot,seaborn,dev,docs,pybamm]"
          uv pip install $wheel
      - name: Run tests
        run: uv run --no-sync pytest -n auto
